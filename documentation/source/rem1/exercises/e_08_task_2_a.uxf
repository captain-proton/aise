<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>230</x>
      <y>210</y>
      <w>61</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>// Modify the text below and
// observe the element preview.
Student</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>90</x>
      <y>490</y>
      <w>91</w>
      <h>51</h>
    </coordinates>
    <panel_attributes>// Modify the text below and
// observe the element preview.
examination
office</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>580</x>
      <y>320</y>
      <w>71</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>// Modify the text below and
// observe the element preview.
schedule</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawLineHorizontal(0);
drawLineHorizontal(y - 4);</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>370</x>
      <y>310</y>
      <w>81</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>// Modify the text below and
// observe the element preview.
check
exam</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>280</x>
      <y>210</y>
      <w>140</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
m2=desired\nexam</panel_attributes>
    <additional_attributes>120.0;100.0;120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>240</x>
      <y>230</y>
      <w>150</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
student id</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0;130.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>320</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
course id</panel_attributes>
    <additional_attributes>10.0;20.0;140.0;20.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>570</x>
      <y>210</y>
      <w>111</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>// Modify the text below and
// observe the element preview.
course register</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawLineHorizontal(0);
drawLineHorizontal(y - 4);</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>210</y>
      <w>170</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
courses</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>90</x>
      <y>310</y>
      <w>91</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>// Modify the text below and
// observe the element preview.
check
permission</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>130</x>
      <y>390</y>
      <w>90</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
permission
status</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>170</x>
      <y>340</y>
      <w>220</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
course registration</panel_attributes>
    <additional_attributes>10.0;20.0;200.0;20.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>380</x>
      <y>470</y>
      <w>91</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>// Modify the text below and
// observe the element preview.
save 
exam
enrollment</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>410</x>
      <y>380</y>
      <w>130</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
exam enrollment</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>170</x>
      <y>500</y>
      <w>230</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
enrollment</panel_attributes>
    <additional_attributes>10.0;20.0;210.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>780</x>
      <y>220</y>
      <w>490</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>course register = courses
courses = 1{course}
course = course id + name + (term) + (exams)
course registration = course id + student id
course id = 4{A|B|C|...|Z|&amp;}4
exams = 1{exam}
enrollment = exam + student id
desired exam = exam
exam = exam id + date + course id + ["written" | "oral"]
permission status = [course|exam] + student id + ["allowed" | "not allowed"]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>340</y>
      <w>240</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
enrollment</panel_attributes>
    <additional_attributes>160.0;10.0;160.0;180.0;10.0;180.0</additional_attributes>
  </element>
</diagram>
