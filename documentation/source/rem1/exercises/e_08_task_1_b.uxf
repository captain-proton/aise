<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>390</x>
      <y>570</y>
      <w>61</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Student</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>770</x>
      <y>780</y>
      <w>71</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Lecturer</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>590</x>
      <y>560</y>
      <w>160</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
list of 
student
examination
results</panel_attributes>
    <additional_attributes>10.0;20.0;140.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>700</y>
      <w>100</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
examination
results</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>590</y>
      <w>170</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
student
examination results</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;150.0;70.0;150.0;40.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>370</x>
      <y>150</y>
      <w>131</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Examination office</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>410</x>
      <y>500</y>
      <w>130</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
course
registration data</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>380</x>
      <y>440</y>
      <w>71</w>
      <h>71</h>
    </coordinates>
    <panel_attributes>register
for course</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>380</x>
      <y>350</y>
      <w>111</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>course register</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawLineHorizontal(0);
drawLineHorizontal(y - 4);</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>410</x>
      <y>370</y>
      <w>130</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
validated
registration data</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>210</x>
      <y>460</y>
      <w>71</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>schedule</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawLineHorizontal(0);
drawLineHorizontal(y - 4);</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>270</x>
      <y>460</y>
      <w>130</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
course 
data</panel_attributes>
    <additional_attributes>10.0;20.0;110.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>410</x>
      <y>170</y>
      <w>100</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
course data</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>390</x>
      <y>230</y>
      <w>61</w>
      <h>61</h>
    </coordinates>
    <panel_attributes>enter
course</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>410</x>
      <y>280</y>
      <w>100</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
valid
course data</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>170</x>
      <y>550</y>
      <w>71</w>
      <h>71</h>
    </coordinates>
    <panel_attributes>register
for exam</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>230</x>
      <y>560</y>
      <w>180</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
exam
registration data</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>110</x>
      <y>360</y>
      <w>290</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
student
courses</panel_attributes>
    <additional_attributes>60.0;210.0;10.0;210.0;10.0;10.0;270.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>70</x>
      <y>160</y>
      <w>320</w>
      <h>470</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
m1=student\npermissions</panel_attributes>
    <additional_attributes>100.0;430.0;10.0;430.0;10.0;10.0;300.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>210</x>
      <y>480</y>
      <w>130</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
validated exam
registration data</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>730</x>
      <y>560</y>
      <w>141</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Examination results</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawLineHorizontal(0);
drawLineHorizontal(y - 4);</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>780</x>
      <y>650</y>
      <w>61</w>
      <h>61</h>
    </coordinates>
    <panel_attributes>enter 
exam 
results</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>580</y>
      <w>80</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
validated
results</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>540</x>
      <y>570</y>
      <w>61</w>
      <h>61</h>
    </coordinates>
    <panel_attributes>view 
exam
results</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>560</y>
      <w>120</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
student id</panel_attributes>
    <additional_attributes>100.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>30</x>
      <y>100</y>
      <w>410</w>
      <h>580</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
validated exam
registration data</panel_attributes>
    <additional_attributes>390.0;50.0;390.0;10.0;10.0;10.0;10.0;560.0;190.0;560.0;190.0;520.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>780</x>
      <y>160</y>
      <w>61</w>
      <h>61</h>
    </coordinates>
    <panel_attributes>collect
exam
results
</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>170</y>
      <w>320</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
exam ids</panel_attributes>
    <additional_attributes>300.0;20.0;10.0;20.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>210</y>
      <w>30</w>
      <h>370</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;350.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>490</x>
      <y>140</y>
      <w>310</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
exams</panel_attributes>
    <additional_attributes>10.0;20.0;290.0;20.0</additional_attributes>
  </element>
</diagram>
