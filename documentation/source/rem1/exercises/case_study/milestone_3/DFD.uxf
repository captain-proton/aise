<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>100</x>
      <y>290</y>
      <w>71</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>An-Knopf</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>290</x>
      <y>270</y>
      <w>91</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>Komponenten
prüfen</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>160</x>
      <y>160</y>
      <w>190</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
fehlerhafte
Komponente</panel_attributes>
    <additional_attributes>10.0;20.0;170.0;20.0;170.0;110.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>100</x>
      <y>170</y>
      <w>71</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Fehlerlog</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawLineHorizontal(0);
drawLineHorizontal(y - 4);</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>370</x>
      <y>290</y>
      <w>170</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
fehlerhafte
Komponente</panel_attributes>
    <additional_attributes>150.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>520</x>
      <y>300</y>
      <w>101</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Systemstatus</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawLineHorizontal(0);
drawLineHorizontal(y - 4);</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>290</x>
      <y>440</y>
      <w>81</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>Abstände
prüfen</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>460</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-

Abstände</panel_attributes>
    <additional_attributes>140.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>30</x>
      <y>470</y>
      <w>131</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Ultraschallsensoren</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>320</y>
      <w>190</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
m2=geringster Abstand</panel_attributes>
    <additional_attributes>170.0;10.0;170.0;160.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>160</x>
      <y>290</y>
      <w>150</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
aktiviert</panel_attributes>
    <additional_attributes>130.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>290</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
aggregierter
Status</panel_attributes>
    <additional_attributes>140.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>30</x>
      <y>560</y>
      <w>131</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Getriebesteuerung</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>550</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
eingelegter
Gang</panel_attributes>
    <additional_attributes>140.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>290</x>
      <y>530</y>
      <w>81</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>Getriebe 
prüfen</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>320</y>
      <w>230</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
m2=valider Gang</panel_attributes>
    <additional_attributes>210.0;10.0;210.0;250.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>0</x>
      <y>660</y>
      <w>161</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Geschwindigkeitssensor</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>650</y>
      <w>150</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Geschwindigkeit
im metrischen
System</panel_attributes>
    <additional_attributes>130.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>280</x>
      <y>620</y>
      <w>111</w>
      <h>111</h>
    </coordinates>
    <panel_attributes>Geschwindigkeit 
prüfen</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>380</x>
      <y>320</y>
      <w>240</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
m2=valide Geschwindigkeit</panel_attributes>
    <additional_attributes>220.0;10.0;220.0;350.0;10.0;350.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>750</x>
      <y>260</y>
      <w>101</w>
      <h>101</h>
    </coordinates>
    <panel_attributes>Systemstatus
prüfen</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>290</y>
      <w>110</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
valider
Status</panel_attributes>
    <additional_attributes>90.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>930</x>
      <y>270</y>
      <w>81</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>Warnungen
aktualisieren</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>790</x>
      <y>350</y>
      <w>80</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
invalider
Status</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>760</x>
      <y>420</y>
      <w>101</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Bordcomputer</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1000</x>
      <y>200</y>
      <w>140</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Anzahl 
aktive LEDs</panel_attributes>
    <additional_attributes>120.0;10.0;40.0;10.0;40.0;80.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>1120</x>
      <y>300</y>
      <w>91</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Audiosystem</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1000</x>
      <y>290</y>
      <w>140</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Ton</panel_attributes>
    <additional_attributes>120.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>1120</x>
      <y>370</y>
      <w>91</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Videosystem</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1000</x>
      <y>300</y>
      <w>140</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Bild</panel_attributes>
    <additional_attributes>120.0;80.0;40.0;80.0;40.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>770</x>
      <y>160</y>
      <w>61</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Kamera</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>790</x>
      <y>180</y>
      <w>140</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Kamera-
aktivierungssignal</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>1120</x>
      <y>190</y>
      <w>51</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>LEDs</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
</diagram>
