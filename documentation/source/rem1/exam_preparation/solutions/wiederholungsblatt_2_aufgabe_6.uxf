<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>650</x>
      <y>160</y>
      <w>111</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Produktkatalog</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawLineHorizontal(0);
drawLineHorizontal(y - 4);</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>270</x>
      <y>150</y>
      <w>51</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Kunde</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>480</x>
      <y>120</y>
      <w>101</w>
      <h>101</h>
    </coordinates>
    <panel_attributes>1.1
Produktkatalog
anzeigen</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>570</x>
      <y>160</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>310</x>
      <y>150</y>
      <w>190</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Produktauswahl</panel_attributes>
    <additional_attributes>10.0;20.0;170.0;20.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>630</x>
      <y>300</y>
      <w>81</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Warenkorb</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawLineHorizontal(0);
drawLineHorizontal(y - 4);</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>390</x>
      <y>270</y>
      <w>101</w>
      <h>101</h>
    </coordinates>
    <panel_attributes>1.2
Produkt
merken</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>290</x>
      <y>170</y>
      <w>120</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Produkt</panel_attributes>
    <additional_attributes>100.0;150.0;10.0;150.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>300</y>
      <w>170</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>370</x>
      <y>470</y>
      <w>101</w>
      <h>101</h>
    </coordinates>
    <panel_attributes>1.4
Einloggen</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>370</x>
      <y>620</y>
      <w>101</w>
      <h>101</h>
    </coordinates>
    <panel_attributes>1.5
Registrieren</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>270</x>
      <y>170</y>
      <w>120</w>
      <h>370</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Logindaten</panel_attributes>
    <additional_attributes>100.0;350.0;10.0;350.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>150</y>
      <w>190</w>
      <h>540</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Registrierungsdaten</panel_attributes>
    <additional_attributes>170.0;520.0;10.0;520.0;10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>600</x>
      <y>660</y>
      <w>61</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Kunden</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawLineHorizontal(0);
drawLineHorizontal(y - 4);</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>650</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
validierte
Kundendaten</panel_attributes>
    <additional_attributes>140.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>900</x>
      <y>660</y>
      <w>91</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Buchhaltung</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>730</x>
      <y>620</y>
      <w>101</w>
      <h>101</h>
    </coordinates>
    <panel_attributes>1.6
Kundendaten
auslesen</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>650</x>
      <y>650</y>
      <w>100</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
</panel_attributes>
    <additional_attributes>80.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>820</x>
      <y>650</y>
      <w>100</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Kunde</panel_attributes>
    <additional_attributes>80.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>620</x>
      <y>390</y>
      <w>101</w>
      <h>101</h>
    </coordinates>
    <panel_attributes>1.3
Bestellvorgang
durchführen</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>660</x>
      <y>320</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>410</x>
      <y>420</y>
      <w>230</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Kundenbestell-
daten</panel_attributes>
    <additional_attributes>210.0;20.0;10.0;20.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>480</y>
      <w>310</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Kundenbestell-
daten</panel_attributes>
    <additional_attributes>200.0;10.0;200.0;150.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>500</y>
      <w>180</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Kundendaten</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0;160.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>310</x>
      <y>170</y>
      <w>580</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
gewählte
Versandmethode</panel_attributes>
    <additional_attributes>410.0;250.0;460.0;250.0;460.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>280</x>
      <y>70</y>
      <w>680</w>
      <h>400</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Versanddaten</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;20.0;660.0;20.0;660.0;380.0;440.0;380.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>300</x>
      <y>170</y>
      <w>640</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-


gewählte
Bezahlmethode</panel_attributes>
    <additional_attributes>420.0;270.0;530.0;270.0;530.0;150.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>710</x>
      <y>460</y>
      <w>330</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
kalkulierte Bestellkosten</panel_attributes>
    <additional_attributes>310.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>1020</x>
      <y>470</y>
      <w>91</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Kreditinstitut</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>830</x>
      <y>530</y>
      <w>91</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Bestellungen</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawLineHorizontal(0);
drawLineHorizontal(y - 4);</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>710</x>
      <y>480</y>
      <w>140</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Bestellung</panel_attributes>
    <additional_attributes>120.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>1020</x>
      <y>530</y>
      <w>101</w>
      <h>101</h>
    </coordinates>
    <panel_attributes>1.7
Bestelldaten
übertragen</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>910</x>
      <y>540</y>
      <w>130</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>980</x>
      <y>620</y>
      <w>110</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Bestellung</panel_attributes>
    <additional_attributes>10.0;50.0;90.0;50.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>900</x>
      <y>720</y>
      <w>121</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Versandzentrum</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>900</x>
      <y>770</y>
      <w>111</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>Warenausgang</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1010</x>
      <y>620</y>
      <w>100</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Bestellung</panel_attributes>
    <additional_attributes>10.0;110.0;80.0;110.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1000</x>
      <y>620</y>
      <w>130</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Bestellung</panel_attributes>
    <additional_attributes>10.0;170.0;110.0;170.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>1020</x>
      <y>200</y>
      <w>101</w>
      <h>101</h>
    </coordinates>
    <panel_attributes>1.8
Bonität
prüfen</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

int y=height / 2 - textHeight() * textlines.size() * 2 / 3;

drawCircle(width / 2, height / 2, height / 2);

for(String textline : textlines) {
	y = y + textHeight();
	printCenter(textline,y);
}</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>690</x>
      <y>240</y>
      <w>350</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
m2=Bonitätsprüfungsergebnis</panel_attributes>
    <additional_attributes>10.0;150.0;60.0;10.0;330.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>710</x>
      <y>270</y>
      <w>330</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Kundendaten</panel_attributes>
    <additional_attributes>310.0;20.0;50.0;20.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1050</x>
      <y>290</y>
      <w>160</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Kundenprüfungsdaten</panel_attributes>
    <additional_attributes>10.0;180.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1100</x>
      <y>240</y>
      <w>210</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Bonitätsdaten</panel_attributes>
    <additional_attributes>20.0;10.0;110.0;10.0;110.0;250.0;10.0;250.0</additional_attributes>
  </element>
</diagram>
